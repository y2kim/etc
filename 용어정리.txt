일반적인 변수의 뜻 -> 고정되어 있지 않은 수
JAVA 에서 변수의 뜻 -> 데이터 또는 자료를 저장하기 위한 메모리 공간
컴퓨터의 원리 : 변수 
CPU : Centrol 중앙 process처리 unit장치 : 핵심적인 처리 장치   입력→ 기억→ 처리
RAM : random assece memory 주 기억장치 : RAM 기억된것만 CPU는 처리함  : 코딩하고 나서 램에 저장해야 CPU에서 동작함 = memory
(계산할때 [목적 값이] 저장공간이 필요함 그래서 변수 넣을수 있는 공간이 활용됨 )[RAM 장치속에 조금만한 공간]
HDD : 보조 기억장치 : HDD 내용을 RAM에 복사 (로딩)

DataType      | 변수명;  [변수 : 공간의 이름 : 주소를 TEXT화 ] :&: C언어 :포인터 
ㄴ Size, Type [조언]|

예약어 (public  static int )으로 절대 변수 이름으로 설정 금지
추측 가능한 변수로 생성 유도해야함  + 의미없는 변수 금지  

클래스+상수(전부 대문자) 만이 첫글자로 대문자

나머지는 모두 소문자로 시작 (lastIndexOf,  StringBuffer(클래스,상수)) 카멜케이스 : 자바 

합성어의 첫글자는 대문자


------
변수 
OS 역활: 리소스 매니저(자원 관리자): 근본적은 이유 
컴퓨터의 자원 : CPU,HDD,RAM
CPU 대한 자원관리: 스케줄링 : 여러 프로세스 처리 (우선순위 처리 및 알고리즘변경)
RAM 대한 자원관리: 가상 메모리  (CPU에서 처리할수 있는 메모리) 
--
RAM의 영역들 [보관소]
Stack:  기본형 변수 : 스택 메모리 사용
DATA: 
HIP: 참조형(스택과 같이 사용)
TEXT: 
--
HDD 대한 자원관리: 파일 시스템 관리 (효율적인 저장)
2진수 -> 전기신호
자료와 형태
기본: 논리형,정수형,실수형  = 8개  (Bool,int,float ..etc)
- 논리 : boolean (True,False)
- 정수 : Byte(1byte=8bit  -128~127) --(이후2의 10승 차이) 1024Byte -> 1KB   //
 char(1글자) (2BYTE SIZE) unicode (문자형  실제로는 숫자(ASCII) 정수자료  0부터 시작)// 국제표준 ASCII // 음수표현 불가 (0~65535)
int : 대중적으로 사용됨 
long : L 뒤의 대문자 L 를 붙여야 할때 있음
===
(EX: Byte A : 1Byte 크기의 변수 A 
- 실수 : 소수점 표현 
	float  이클립스의 문법검사의 한계 /F 붙이면 됨
	double  기본 실수는 더블로 인식
-=-=-=-=-=-=-==-=
예외1 : byte,short  :범위에 따라 달라짐  ,대소관계의 주요 요점 
문제는 char 와 Short, Byte 는 다르다. 표현 범위가 다름 대소 관계 다름  그러나 INT 형은  압도적으로 범위가 커서 대소 관계가 됨
예외2 : 실수와 정수(int,long) 실수형은 정수보다 무조건 크다  (float > long) 
Boolean(1) : 참과 거짓 /0과1은 참과 거짓은 아니다  True/False 만이 참 거짓 자바에서는 ..

참조: 기본형 나머지 제외 (String, etc...) 메모리 다르게 씀 가변적 크기, 큼
기본은 크기가 잡혀있음, 작음  
